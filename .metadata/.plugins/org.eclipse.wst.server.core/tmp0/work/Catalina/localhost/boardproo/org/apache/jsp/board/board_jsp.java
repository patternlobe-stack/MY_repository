/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.43
 * Generated at: 2025-09-19 07:42:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.google.gson.Gson;
import kr.or.ddit.member.vo.MemberVO;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("kr.or.ddit.member.vo.MemberVO");
    _jspx_imports_classes.add("com.google.gson.Gson");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/board.css\">\r\n");
      out.write("<script src=\"../js/jquery-3.7.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"../js/board.js\"></script>\r\n");
      out.write("\r\n");

	//로그인 상태 비교 
   MemberVO  vo =   (MemberVO)session.getAttribute("loginok");
   
   String user = null; //user라는 문자열 변수를 선언.

                                 //나중에 MemberVO 객체를 JSON 문자열로 변환해서 저장할 용도
   
   Gson  gson = new Gson();
   
                                    //Gson 라이브러리(Google JSON 라이브러리) 객체 생성.

                                    // Gson을 사용하면 자바 객체를 JSON 문자열로 변환하거나(JSON 직렬화), JSON을 자바 객체로 변환(JSON 역직렬화)할 수 있음.
  
   if(vo != null)  user= gson.toJson(vo); 
                                  //로그인한 사용자가 있으면(vo != null),

                                    //vo 객체를 Gson을 이용해 JSON 문자열로 변환 → user 변수에 저장

 /*  user= {
	  "mem_id"   : "a001" ,
	  "mem_pass" : "asdfasdf",
	  "mem_name" : "김은대"
    }
 */

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("uvo = ");
      out.print( user != null ? user : "null" );
      out.write("; \r\n");
      out.write("console.log(\"uvo====\", uvo);\r\n");
      out.write("\r\n");
      out.write("currentPage = 1;\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	ff = document.querySelector(\"#ff\");\r\n");
      out.write("\r\n");
      out.write("	// 폼 submit 이벤트 등록\r\n");
      out.write("	ff.addEventListener('submit', fn_listPageServer);\r\n");
      out.write("\r\n");
      out.write("	// 최초 실행\r\n");
      out.write("	ff.requestSubmit();\r\n");
      out.write("\r\n");
      out.write("	// 다음 버튼 클릭\r\n");
      out.write("	$(document).on('click', '#next', function(){\r\n");
      out.write("		currentPage = parseInt($('.pageno').last().text()) + 1;\r\n");
      out.write("		ff.page.value = currentPage;\r\n");
      out.write("		ff.requestSubmit();\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	// 이전 버튼 클릭\r\n");
      out.write("	$(document).on('click', '#prev', function(){\r\n");
      out.write("		currentPage = parseInt($('.pageno').first().text()) - 1;\r\n");
      out.write("		ff.page.value = currentPage;\r\n");
      out.write("		ff.requestSubmit();\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	// 페이지 번호 클릭\r\n");
      out.write("	$(document).on('click', '.pageno', function(){\r\n");
      out.write("		currentPage = parseInt($(this).text());\r\n");
      out.write("		ff.page.value = currentPage;\r\n");
      out.write("		ff.requestSubmit();\r\n");
      out.write("	});\r\n");
      out.write("	//검색버튼 클릭\r\n");
      out.write("	\r\n");
      out.write("	$('#search').on('click', function(){\r\n");
      out.write("		currentPage = 1;\r\n");
      out.write("		ff.page.value = currentPage;\r\n");
      out.write("		ff.requestSubmit();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 댓글 수정폼  -->\r\n");
      out.write(" <div id=\"modifyform\">\r\n");
      out.write("<textarea rows=\"5\" cols=\"50\"></textarea>\r\n");
      out.write("<input type=\"button\" value=\"확인\" id=\"btnok\">\r\n");
      out.write("<input type=\"button\" value=\"취소\" id=\"btnreset\">\r\n");
      out.write("</div>\r\n");
      out.write(" \r\n");
      out.write("  <br>\r\n");
      out.write("  <br>\r\n");
      out.write("   <nav class=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("  <input type=\"button\" id=\"write\" value=\"글쓰기\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"javascript:void(0)\">Logo</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mynavbar\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"mynavbar\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\r\n");
      out.write("        </li>\r\n");
      out.write("       \r\n");
      out.write("      </ul>\r\n");
      out.write("   <!--  /  ff.page -->\r\n");
      out.write("      <form class=\"d-flex\" id=\"ff\">\r\n");
      out.write("      <input type=\"hidden\" name=\"page\" value=\"1\" > \r\n");
      out.write("      <select class=\"form-select\" id=\"stype\" name=\"stype\">\r\n");
      out.write("		  <option value=\"\">전체</option>\r\n");
      out.write("		  <option value=\"writer\">작성자</option>\r\n");
      out.write("		  <option value=\"subject\">제목</option>\r\n");
      out.write("		  <option value=\"content\">내용</option>\r\n");
      out.write("	  </select>\r\n");
      out.write("      \r\n");
      out.write("        <input class=\"form-control me-2\" type=\"text\" id=\"sword\" name=\"sword\" placeholder=\"Search\">\r\n");
      out.write("        <button id=\"search\" class=\"btn btn-primary\" type=\"submit\">Search</button>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("   \r\n");
      out.write("   <br><br>\r\n");
      out.write("   <!-- 리스트 3개씩을 출력 -->\r\n");
      out.write("   <div id=\"list\"></div>\r\n");
      out.write("      <!-- //출력모양을 html코드로  미리 만들어놔도 됨\r\n");
      out.write("        비동기 처리 후 결과데이타만 출력하면됨-->\r\n");
      out.write("      <!-- 우리는 출력모양과 데이타출력을 비동기 처리 후   한꺼번에 함-->    \r\n");
      out.write("   <br>\r\n");
      out.write("   <br>\r\n");
      out.write("   \r\n");
      out.write("   <!-- 페이지정보를 출력  -->\r\n");
      out.write("   <div id=\"pagelist\"></div>\r\n");
      out.write("  \r\n");
      out.write("<!------- 글쓰기   The Modal  ------- -->\r\n");
      out.write("<div class=\"modal\" id=\"wModal\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal Header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">게시글 작성하기</h4>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("       \r\n");
      out.write("       <form name=\"wfrom\" id=\"wform\">\r\n");
      out.write("            \r\n");
      out.write("            <label>이름</label>\r\n");
      out.write("            <input type=\"text\" class=\"txt\" id=\"writer\" name=\"writer\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>제목</label>\r\n");
      out.write("            <input type=\"text\" class=\"txt\" id=\"subject\" name=\"subject\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>메일</label>\r\n");
      out.write("            <input type=\"text\"  class=\"txt\" id=\"mail\" name=\"mail\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>비밀번호</label>\r\n");
      out.write("            <input type=\"password\"  class=\"txt\" id=\"password\"   name=\"password\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>내용</label>\r\n");
      out.write("            <br>\r\n");
      out.write("            <textarea rows=\"5\" cols=\"40\"  class=\"txt\" id=\"content\"  name=\"content\"></textarea>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <input type=\"button\" value=\"전송\" id=\"send\">\r\n");
      out.write("        </form>\r\n");
      out.write("       \r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("<!----- 글 수정  The Modal    ----->\r\n");
      out.write("<div class=\"modal\" id=\"uModal\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal Header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">게시글 수정하기</h4>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("       \r\n");
      out.write("       <form name=\"ufrom\" id=\"uform\">\r\n");
      out.write("          \r\n");
      out.write("            <input type=\"hidden\" id=\"unum\" name=\"num\">\r\n");
      out.write("            <label>이름</label>\r\n");
      out.write("            <input type=\"text\" class=\"txt\" id=\"uwriter\" name=\"writer\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>제목</label>\r\n");
      out.write("            <input type=\"text\" class=\"txt\" id=\"usubject\" name=\"subject\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>메일</label>\r\n");
      out.write("            <input type=\"text\"  class=\"txt\" id=\"umail\" name=\"mail\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>비밀번호</label>\r\n");
      out.write("            <input type=\"password\"  class=\"txt\" id=\"upassword\"   name=\"password\"> <br> \r\n");
      out.write("            \r\n");
      out.write("            <label>내용</label>\r\n");
      out.write("            <br>\r\n");
      out.write("            <textarea rows=\"5\" cols=\"40\"  class=\"txt\" id=\"ucontent\"  name=\"content\"></textarea>\r\n");
      out.write("            <br>\r\n");
      out.write("            <br>\r\n");
      out.write("            <input type=\"button\" value=\"전송\" id=\"usend\">\r\n");
      out.write("        </form>\r\n");
      out.write("       \r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
