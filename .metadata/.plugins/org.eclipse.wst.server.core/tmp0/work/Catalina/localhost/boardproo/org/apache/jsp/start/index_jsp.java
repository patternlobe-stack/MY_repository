/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.43
 * Generated at: 2025-09-19 05:42:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.start;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import kr.or.ddit.member.vo.MemberVO;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/PC-18/Desktop/03_web/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/boardproo/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1758173420340L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("kr.or.ddit.member.vo.MemberVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("  <title>Bootstrap 기반 웹페이지</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Font Awesome CDN (head 영역에 삽입) -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Bootstrap CSS -->\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("  \r\n");
      out.write("  <style>\r\n");
      out.write("    html, body {\r\n");
      out.write("      height: 100%;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("  \r\n");
      out.write("    .main-layout {\r\n");
      out.write("      height: calc(100vh - 100px); \r\n");
      out.write("      overflow: hidden;\r\n");
      out.write("    }\r\n");
      out.write("    aside {\r\n");
      out.write("      background-color: #f8f9fa;\r\n");
      out.write("      height: 100%;\r\n");
      out.write("      overflow-y: auto;\r\n");
      out.write("    }\r\n");
      out.write("    section {\r\n");
      out.write("      width : 100%;\r\n");
      out.write("      height: 100%;\r\n");
      out.write("      overflow-y: auto;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    footer {\r\n");
      out.write("      height: 50px;\r\n");
      out.write("      line-height: 50px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write("     .dropdown {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("  }\r\n");
      out.write(" .custom-aside{\r\n");
      out.write("    width : 250px;\r\n");
      out.write(" }\r\n");
      out.write("/* 드롭다운 버튼 내부 정렬 및 높이 통일 */\r\n");
      out.write(".dropdown .btn {\r\n");
      out.write("  height: 35px;\r\n");
      out.write("  padding: 4px 10px;\r\n");
      out.write("  display: flex;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  margin-right: 8px; /* 선택 사항 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 회원가입 버튼도 동일한 높이 적용 */\r\n");
      out.write("header .btn-outline-light.btn-sm {\r\n");
      out.write("  height: 35px;\r\n");
      out.write("  padding: 4px 10px;\r\n");
      out.write("}\r\n");
      out.write("  .dropdown-content {\r\n");
      out.write("    display: none;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    background-color: white;\r\n");
      out.write("    min-width: 140px;\r\n");
      out.write("    box-shadow: 0px 8px 16px rgba(0,0,0,0.2);\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .dropdown-content a {\r\n");
      out.write("    color: black;\r\n");
      out.write("    padding: 8px 12px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    display: block;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .dropdown-content a:hover {\r\n");
      out.write("    background-color: #f1f1f1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .dropdown:hover .dropdown-content {\r\n");
      out.write("    display: block;\r\n");
      out.write("  }\r\n");
      out.write("    .profile-img {\r\n");
      out.write("    width: 30px;\r\n");
      out.write("    height: 30px;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    object-fit: cover;\r\n");
      out.write("    margin-right: 8px;\r\n");
      out.write("  }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"d-flex flex-column\">\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Header -->\r\n");
      out.write("<!-- py-4 :세로길이.   원래는 py-2 이었는데  py-4로 바꿈-->\r\n");
      out.write(" <header class=\"bg-dark text-white px-4 py-4 d-flex justify-content-end align-items-center\">\r\n");
      out.write("\r\n");
      out.write("   ");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" \r\n");
          out.write("    ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return;
          out.write("\r\n");
          out.write("    ");
          //  c:otherwise
          org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
          _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
          _jspx_th_c_005fotherwise_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
          int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
          if (_jspx_eval_c_005fotherwise_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("	 <div class=\"dropdown\">\r\n");
              out.write("        <button class=\"btn btn-outline-light btn-sm dropdown-toggle d-flex align-items-center\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
              out.write("          <!-- 사용자 프로필 이미지가 있다면 해당 이미지, 없으면 기본 아이콘 -->\r\n");
              out.write("          <img src=\"");
              out.print( session.getAttribute("profileImg") != null ? session.getAttribute("profileImg") : "../upload/profile/crismasth.jpeg" );
              out.write("\" class=\"profile-img\" alt=\"profile\">\r\n");
              out.write("          <span><strong>");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginok.mem_id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("님</strong></span>\r\n");
              out.write("        </button>\r\n");
              out.write("\r\n");
              out.write("        <ul class=\"dropdown-menu dropdown-menu-end\">\r\n");
              out.write("          <li><a class=\"dropdown-item\" href=\"mypage.jsp\">👤 마이페이지</a></li>\r\n");
              out.write("          <li><a class=\"dropdown-item\" href=\"mail.jsp\">📧 메일</a></li>\r\n");
              out.write("          <li><a class=\"dropdown-item\" href=\"message.jsp\">💬 쪽지</a></li>\r\n");
              out.write("          <li><hr class=\"dropdown-divider\"></li>\r\n");
              out.write("          <li><a class=\"dropdown-item text-danger\" onclick=\"logout()\">🚪 로그아웃</a></li>\r\n");
              out.write("        </ul>\r\n");
              out.write("      </div>\r\n");
              out.write("	");
              int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
              if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fotherwise_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
          _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
          out.write("\r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Main Layout -->\r\n");
      out.write("  <div class=\"container-fluid flex-grow-1\">\r\n");
      out.write("    <div class=\"row main-layout\">\r\n");
      out.write("      <!-- Aside -->\r\n");
      out.write("     <aside class=\"col-3 col-md-2 p-3 border-end\">\r\n");
      out.write("     <!--  <aside class=\"custom-aside  p-3 border-end\"> -->\r\n");
      out.write("        <ul class=\"nav flex-column\">\r\n");
      out.write("          <li class=\"nav-item mb-2\"><a class=\"nav-link\" href=\"#\" onclick=\"loadContent('홈')\">🏠 홈</a></li>\r\n");
      out.write("          <li class=\"nav-item mb-2\"><a class=\"nav-link\" href=\"#\" onclick=\"loadContent('게시판')\">📋 게시판</a></li>\r\n");
      out.write("          <li class=\"nav-item mb-2\"><a class=\"nav-link\" href=\"#\" onclick=\"loadContent('QNA')\" >💬❓ QNA</a></li>\r\n");
      out.write("          <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\" onclick=\"loadContent('북스토어')\">⚙️ 북스토어</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        \r\n");
      out.write("      </aside>\r\n");
      out.write("\r\n");
      out.write("      <!-- Section -->\r\n");
      out.write("      <section class=\"col-9 col-md-10\" id=\"content\">\r\n");
      out.write("        <h2>홈</h2>\r\n");
      out.write("        <p>환영합니다! 왼쪽 메뉴를 클릭하여 내용을 확인하세요.</p>\r\n");
      out.write("      </section>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- Footer -->\r\n");
      out.write("  <footer class=\"bg-dark text-white text-center\">\r\n");
      out.write("    ⓒ 2025 My Bootstrap Page. All rights reserved.\r\n");
      out.write("  </footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"../js/jquery-3.7.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- Bootstrap JS -->\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Custom JS -->\r\n");
      out.write("  <script>\r\n");
      out.write("  mypath = '");
      out.print( request.getContextPath());
      out.write("';\r\n");
      out.write("  /* 프로젝트 이름  mypath*/\r\n");
      out.write("  \r\n");
      out.write("  function loadContent(menu) {\r\n");
      out.write("      \r\n");
      out.write("		const menuContent = document.getElementById('content');\r\n");
      out.write("		\r\n");
      out.write("	      let html = '';\r\n");
      out.write("\r\n");
      out.write("	      switch (menu) {\r\n");
      out.write("	        case '홈':\r\n");
      out.write("	          html = `<h2>홈</h2><p>홈 페이지에 오신 것을 환영합니다!</p>`;\r\n");
      out.write("	          break;\r\n");
      out.write("	        case '게시판':\r\n");
      out.write("	          $(menuContent).load(`${mypath}/board/board.jsp`);\r\n");
      out.write("	       \r\n");
      out.write("	          break;\r\n");
      out.write("	        case 'QNA':\r\n");
      out.write("		          $(menuContent).load(`${mypath}/qnaboard/qnaboard.jsp`);\r\n");
      out.write("		          break;\r\n");
      out.write("		          \r\n");
      out.write("	          \r\n");
      out.write("	        case '북스토어':\r\n");
      out.write("	          html = `<h2>북스토어</h2><p>여기서 환경 설정을 변경할 수 있습니다.</p>`;\r\n");
      out.write("	          break;\r\n");
      out.write("	        default:\r\n");
      out.write("	          html = `<h2>404</h2><p>해당 메뉴는 존재하지 않습니다.</p>`;\r\n");
      out.write("	      }\r\n");
      out.write("\r\n");
      out.write("	      menuContent.innerHTML = html;\r\n");
      out.write("  }\r\n");
      out.write("	   \r\n");
      out.write("		\r\n");
      out.write(" const  logout = async function(){\r\n");
      out.write("	    	\r\n");
      out.write("	   	 try {\r\n");
      out.write("	   	        const response = await fetch(`${mypath}/Logout.do`);\r\n");
      out.write("\r\n");
      out.write("	   	        if (!response.ok) {\r\n");
      out.write("	   	            throw new Error(`HTTP error! Status: ${response.status}`);\r\n");
      out.write("	   	        }\r\n");
      out.write("				const {flag} = await  response.json();\r\n");
      out.write("		\r\n");
      out.write("				if(flag == \"fail\"){\r\n");
      out.write("					location.href=`${mypath}/start/index.jsp`;\r\n");
      out.write("			   	 }\r\n");
      out.write("				     \r\n");
      out.write("	   	    } catch (error) {\r\n");
      out.write("	   	        console.error('로그인 요청 실패:', error);\r\n");
      out.write("	   	    }\r\n");
      out.write("	   };\r\n");
      out.write("\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fwhen_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /start/index.jsp(109,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginok}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("      <button class=\"btn btn-outline-light btn-sm me-2\" onclick=\"location.href='logpro.jsp'\">🔐 로그인</button>\r\n");
        out.write("      <button class=\"btn btn-outline-light btn-sm\" onclick=\"location.href='../member/join.html'\">>📝 회원가입</button>\r\n");
        out.write("    ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }
}
